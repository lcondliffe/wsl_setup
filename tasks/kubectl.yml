- name: Fetch latest stable kubectl version
  ansible.builtin.uri:
    url: https://dl.k8s.io/release/stable.txt
    return_content: true
  register: kubectl_stable
  tags: [kubectl]

- name: Install kubectl to /usr/local/bin (latest stable, amd64)
  become: true
  ansible.builtin.get_url:
    url: "https://dl.k8s.io/release/{{ kubectl_stable.content | trim }}/bin/linux/amd64/kubectl"
    dest: /usr/local/bin/kubectl
    mode: '0755'
    force: true
  tags: [kubectl]

- name: Show kubectl client version
  ansible.builtin.command: kubectl version --client --output=yaml
  register: kubectl_version
  changed_when: false
  tags: [kubectl]

- name: Output kubectl version
  ansible.builtin.debug:
    msg: "{{ kubectl_version.stdout | default('') }}"
  tags: [kubectl]

- name: Install krew (kubectl plugin manager)
  ansible.builtin.shell: |
    set -euo pipefail
    set -x
    cd "$(mktemp -d)"
    OS="$(uname | tr '[:upper:]' '[:lower:]')"
    ARCH="$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/')"
    KREW="krew-${OS}_${ARCH}"
    curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/latest/download/${KREW}.tar.gz"
    tar zxvf "${KREW}.tar.gz"
    ./"${KREW}" install krew
  args:
    executable: /bin/bash
    creates: "{{ ansible_env.HOME }}/.krew/bin/kubectl-krew"
  tags: [kubectl]

- name: Ensure krew is on PATH in .zshrc
  ansible.builtin.blockinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    create: true
    marker: "# {mark} ANSIBLE MANAGED BLOCK: kubectl-krew PATH"
    block: |
      # Add kubectl-krew to PATH
      export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
  tags: [kubectl, shell]

- name: Verify krew installation
  ansible.builtin.command: kubectl krew version
  environment:
    PATH: "{{ ansible_env.HOME }}/.krew/bin:{{ ansible_env.PATH }}"
  register: krew_version
  changed_when: false
  tags: [kubectl]

- name: Output krew version
  ansible.builtin.debug:
    msg: "{{ krew_version.stdout | default('') }}"
  tags: [kubectl]
