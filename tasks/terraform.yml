# -------------------------
# Terraform (binary install)
# -------------------------
- name: Determine terraform arch
  ansible.builtin.set_fact:
    terraform_arch: "{% if ansible_architecture == 'x86_64' %}amd64{% elif ansible_architecture == 'aarch64' or ansible_architecture == 'arm64' %}arm64{% elif ansible_architecture == 'armv7l' %}arm{% else %}amd64{% endif %}"
  tags: [terraform]

- name: Create temp dir for terraform
  ansible.builtin.file:
    path: "/tmp/terraform-{{ terraform_version }}"
    state: directory
    mode: '0755'
  tags: [terraform]

- name: Download Terraform zip
  ansible.builtin.get_url:
    url: "https://releases.hashicorp.com/terraform/{{ terraform_version }}/terraform_{{ terraform_version }}_linux_{{ terraform_arch }}.zip"
    dest: "/tmp/terraform-{{ terraform_version }}/terraform_{{ terraform_version }}_linux_{{ terraform_arch }}.zip"
    mode: '0644'
  tags: [terraform]

- name: Download Terraform SHA256SUMS
  ansible.builtin.get_url:
    url: "https://releases.hashicorp.com/terraform/{{ terraform_version }}/terraform_{{ terraform_version }}_SHA256SUMS"
    dest: "/tmp/terraform-{{ terraform_version }}/SHA256SUMS"
    mode: '0644'
  tags: [terraform]

- name: Verify Terraform checksum
  ansible.builtin.shell: |
    set -euo pipefail
    cd "/tmp/terraform-{{ terraform_version }}"
    grep "terraform_{{ terraform_version }}_linux_{{ terraform_arch }}.zip" SHA256SUMS | sha256sum -c -
  args:
    executable: /bin/bash
  tags: [terraform]

- name: Unzip Terraform
  ansible.builtin.unarchive:
    src: "/tmp/terraform-{{ terraform_version }}/terraform_{{ terraform_version }}_linux_{{ terraform_arch }}.zip"
    dest: "/tmp/terraform-{{ terraform_version }}"
    remote_src: true
  tags: [terraform]

- name: Install Terraform to /usr/local/bin
  become: true
  ansible.builtin.copy:
    src: "/tmp/terraform-{{ terraform_version }}/terraform"
    dest: /usr/local/bin/terraform
    owner: root
    group: root
    mode: '0755'
  tags: [terraform]

- name: Clean up Terraform temp
  ansible.builtin.file:
    path: "/tmp/terraform-{{ terraform_version }}"
    state: absent
  tags: [terraform]

- name: Show Terraform version
  ansible.builtin.command: terraform version
  register: tf_version
  changed_when: false
  tags: [terraform]

- name: Output Terraform version
  ansible.builtin.debug:
    msg: "{{ tf_version.stdout_lines | default([]) }}"
  tags: [terraform]

