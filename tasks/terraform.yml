# -------------------------
# Terraform (binary install)
# -------------------------
- name: Determine terraform arch
  ansible.builtin.set_fact:
    terraform_arch: "{{ terraform_arch_map.get(ansible_architecture, 'amd64') }}"
  tags: [terraform]

- name: Create temp dir for terraform
  ansible.builtin.file:
    path: "{{ terraform_tmp_dir }}"
    state: directory
    mode: '0755'
  tags: [terraform]

- name: Download Terraform zip
  ansible.builtin.get_url:
    url: "https://releases.hashicorp.com/terraform/{{ terraform_version }}/terraform_{{ terraform_version }}_{{ terraform_os }}_{{ terraform_arch }}.zip"
    dest: "{{ terraform_tmp_dir }}/terraform_{{ terraform_version }}_{{ terraform_os }}_{{ terraform_arch }}.zip"
    mode: '0644'
  tags: [terraform]

- name: Download Terraform SHA256SUMS
  ansible.builtin.get_url:
    url: "https://releases.hashicorp.com/terraform/{{ terraform_version }}/terraform_{{ terraform_version }}_SHA256SUMS"
    dest: "{{ terraform_tmp_dir }}/SHA256SUMS"
    mode: '0644'
  tags: [terraform]

- name: Verify Terraform checksum
  ansible.builtin.shell: |
    set -euo pipefail
    cd "{{ terraform_tmp_dir }}"
    grep "terraform_{{ terraform_version }}_{{ terraform_os }}_{{ terraform_arch }}.zip" SHA256SUMS | sha256sum -c -
  args:
    executable: /bin/bash
  tags: [terraform]

- name: Unzip Terraform
  ansible.builtin.unarchive:
    src: "{{ terraform_tmp_dir }}/terraform_{{ terraform_version }}_{{ terraform_os }}_{{ terraform_arch }}.zip"
    dest: "{{ terraform_tmp_dir }}"
    remote_src: true
  tags: [terraform]

- name: Install Terraform to /usr/local/bin
  become: true
  ansible.builtin.copy:
    src: "{{ terraform_tmp_dir }}/terraform"
    dest: /usr/local/bin/terraform
    owner: root
    group: root
    mode: '0755'
  tags: [terraform]

- name: Clean up Terraform temp
  ansible.builtin.file:
    path: "{{ terraform_tmp_dir }}"
    state: absent
  tags: [terraform]

- name: Show Terraform version
  ansible.builtin.command: terraform version
  register: tf_version
  changed_when: false
  tags: [terraform]

- name: Output Terraform version
  ansible.builtin.debug:
    msg: "{{ tf_version.stdout_lines | default([]) }}"
  tags: [terraform]

