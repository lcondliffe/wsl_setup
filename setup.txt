# Extra repositories
echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_20.04/ /" |
sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list

curl -L "https://download.opensuse.org/repositories/devel:/kubic:\
/libcontainers:/stable/xUbuntu_20.04/Release.key" | sudo apt-key add -

sudo apt-get update -y
sudo apt upgrade -y

# zsh
sudo apt install zsh -y

#oh-my-zsh
sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

# powerline terminal customisation
git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k

# kubectl
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
echo "alias k='kubectl'" >>~/.zshrc

# krew
(
  set -x; cd "$(mktemp -d)" &&
  OS="$(uname | tr '[:upper:]' '[:lower:]')" &&
  ARCH="$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/')" &&
  KREW="krew-${OS}_${ARCH}" &&
  curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/latest/download/${KREW}.tar.gz" &&
  tar zxvf "${KREW}.tar.gz" &&
  ./"${KREW}" install krew
)

echo 'export PATH="${PATH}:${HOME}/.krew/bin"' >>~/.zshrc

# kubectx
kubectl krew install ctx
kubectl krew install ns

# azure-cli
curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
az extension add --name azure-devops
az extension add --name desktopvirtualization
az devops configure --defaults organization=https://dev.azure.com/universityofderby

# unzip
sudo apt install unzip -y

# vault
curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
sudo apt-get update && sudo apt-get install vault

echo "alias vl='vault login -method=oidc'" >>~/.zshrc
echo 'export VAULT_ADDR=https://vault.derby.ac.uk' >>~/.zshrc

# terraform
curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
sudo apt-get update && sudo apt-get install terraform

# packer
curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
sudo apt-get update && sudo apt-get install packer

# ansible
sudo apt install ansible -y

# podman
sudo apt install podman -y

# tfsec
wget https://github.com/aquasecurity/tfsec/releases/download/v1.21.2/tfsec-linux-amd64
sudo mv tfsec-checkgen-linux-amd64 /usr/local/bin/tfsec
sudo chmod +x /usr/local/bin/tfsec
wget https://github.com/aquasecurity/tfsec/releases/download/v1.21.2/tfsec-checkgen-linux-amd64
sudo chmod +x tfsec-checkgen-linux-amd64
 sudo mv tfsec-checkgen-linux-amd64 /usr/local/bin/tfsec-checkgen

# WSL2 AnyConnect Fix
#https://jamespotz.github.io/blog/how-to-fix-wsl2-and-cisco-vpn
sudo unlink /etc/resolv.conf # this will unlink the default wsl2 resolv.conf

# This config will prevent wsl2 from overwritting the resolve.conf file everytime
# you start wsl2
cat <<EOF | sudo tee -a /etc/wsl.conf
[network]
generateResolvConf = false
EOF

cat <<EOF | sudo tee -a /etc/resolv.conf
nameserver 10.32.0.1
nameserver 10.32.0.2
nameserver 8.8.8.8
nameserver 8.8.4.4
search university.ds.derby.ac.uk
EOF

# SSH
## COPY keys from vault into ~/.SSH
chmod 700 ~/.ssh
chmod 644 ~/.ssh/id_rsa.pub
chmod 600 ~/.ssh/id_rsa