---
- name: WSL Ubuntu setup
  hosts: localhost
  connection: local
  gather_facts: true

  vars:
    # Flip this via: -e run_bootstrap_scripts=true
    run_bootstrap_scripts: false
    ansible_python_interpreter: /usr/bin/python3

    # WSL System Environment Variables:
    env_vars:
      SKIP: "terraform_checkov,end-of-file-fixer"

    terraform_version: "1.9.5"
    terraform_os: "linux"
    terraform_arch_map:
      x86_64: amd64
      aarch64: arm64
      arm64: arm64
      armv7l: arm
    terraform_tmp_dir: "/tmp/terraform-{{ terraform_version }}"

    # home directory structure
    directories:
      - "{{ ansible_env.HOME }}/ansible"
      - "{{ ansible_env.HOME }}/ansible/playbooks"
      - "{{ ansible_env.HOME }}/ansible/roles"
      - "{{ ansible_env.HOME }}/repo"
      - "{{ ansible_env.HOME }}/repo/private"
      - "{{ ansible_env.HOME }}/repo/public"
      - "{{ ansible_env.HOME }}/repo/training"
      - "{{ ansible_env.HOME }}/scripts"
      - "{{ ansible_env.HOME }}/temp"

    # apt packages to install (can be overridden via -e or group_vars)
    apt_packages:
      - azure-cli # (requires Microsoft repo)
      - bat # https://github.com/sharkdp/bat
      - buildah
      - curl
      - dnsutils
      - eza # https://github.com/eza-community/eza
      - fzf # https://github.com/junegunn/fzf
      - git-delta # https://github.com/dandavison/delta
      - gpg
      - httpie # https://httpie.io/cli
      - jq
      - ncdu # https://github.com/rofl0r/ncdu
      - podman
      - pre-commit
      - pipx
      - python3
      - python3-jmespath
      - python3-venv
      - traceroute
      - unzip
      - xsel
      - yamllint
      - zsh

    shell_aliases:
      ap: "ansible-playbook"
      cat-all: 'for file in *; do echo -e "\n=== $file ===\n"; cat "$file"; done'
      cls: "clear"
      commit: "git add . && git commit --no-verify -m"
      fabric-update: "cp -a ~/.config/custom-fabric-patterns/* ~/.config/fabric/patterns/"
      gd: "git --no-pager diff"
      git-delete-branches: 'git branch | grep -v "main" | xargs git branch -D'
      gl: "git log"
      gp: "git push"
      gpl: "git pull"
      gst: "git status"
      k: "kubectl"
      ll: "ls -al"
      passgen: "tr -dc 'A-Za-z0-9' </dev/urandom | head -c 16 ; echo"
      pbcopy: "tee <&0 | clip.exe"
      pbpaste: "powershell.exe Get-Clipboard | sed 's/\r$//' | sed -z '$ s/\n$//'"
      pc: 'pre-commit run --all-files'
      tfmt: "terraform fmt -recursive"

  tasks:
    - name: Ensure base directories exist in HOME
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop: "{{ directories }}"
      tags: [dirs]

    - name: Export environment variables system-wide
      ansible.builtin.include_tasks: tasks/env_simple.yml
      tags: [env]

    - name: apt repositories
      ansible.builtin.include_tasks: tasks/apt_repos.yml
      tags: [apt]

    - name: Update apt cache
      become: true
      ansible.builtin.apt:
        update_cache: true
      tags: [apt]

    - name: Install apt packages
      become: true
      ansible.builtin.apt:
        name: "{{ apt_packages }}"
        state: present
      tags: [apt]

    - name: Ensure /etc/shells includes zsh
      become: true
      ansible.builtin.lineinfile:
        path: /etc/shells
        line: /usr/bin/zsh
        state: present
        create: no
      tags: [zsh, shell]

    - name: Set zsh as default shell for current user
      become: true
      ansible.builtin.user:
        name: "{{ ansible_user_id }}"
        shell: /usr/bin/zsh
      tags: [zsh, shell]

    - name: Ensure .zshrc contains a managed block for custom aliases
      ansible.builtin.blockinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        create: true
        marker: "# {mark} ANSIBLE MANAGED BLOCK: Custom Aliases"
        block: |
          {% for alias_name, alias_command in shell_aliases.items() %}
          alias {{ alias_name }}="{{ alias_command }}"
          {% endfor %}
      tags: [aliases, shell]

    - name: Terraform
      ansible.builtin.include_tasks: tasks/terraform.yml
      tags: [terraform, scripts]

    - name: Infracost
      ansible.builtin.include_tasks: tasks/infracost.yml
      tags: [infracost, scripts]

    - name: Kubectl
      ansible.builtin.include_tasks: tasks/kubectl.yml
      tags: [kubectl, scripts]

    - name: Helm
      ansible.builtin.include_tasks: tasks/helm.yml
      tags: [helm, scripts]
